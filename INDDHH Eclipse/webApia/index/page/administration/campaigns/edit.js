function initPage(){
	//crear spinner de espere un momento
	sp = new Spinner(document.body,{message:WAIT_A_SECOND});

	initAdminFieldOnChangeHighlight();
	initAdminActionsEdition();
	initAdminFav();
	
	var cmpSource = $('cmpSource');
	cmpSource.addEvent('change', function(evt){
		if (this.selectedIndex == 0) {
			$('cmpUrlTargetField').removeClass("hidden");
			$('cmpSrcImageField').removeClass("hidden");
			$('cmpUrlField').removeClass("hidden");
			$('cmpSrcCodeField').addClass("hidden");

			registerValidation($('cmpUrlTarget'));
			registerValidation($('cmpSrcImage'));
			registerValidation($('cmpUrl'));
			
			disposeValidation($('cmpSrcCode'));
			
			$('cmpSrcImage').target = $('cmpSrcImageField');
			
			$('btnResetImg').setStyle("display","");
		} else {
			$('cmpUrlTargetField').addClass("hidden");
			$('cmpSrcImageField').addClass("hidden");
			$('cmpUrlField').addClass("hidden");
			$('cmpSrcCodeField').removeClass("hidden");

			disposeValidation($('cmpUrlTarget'));
			disposeValidation($('cmpSrcImage'));
			disposeValidation($('cmpUrl'));
			disposeValidation($('cmpSrcCode'));

			registerValidation($('cmpSrcCode'));
			
			$('btnResetImg').setStyle("display","none");
		}
	});
	cmpSource.fireEvent('change');
	
	var cmpSrcImagePicker = $('cmpSrcImagePicker');
	if (cmpSrcImagePicker) {
		cmpSrcImagePicker.addEvent('click', function(evt) {
			showImagesModal(processModalImageConfirm,null);
		});
	}
	
	var cmpFlag1 = $('cmpFlag1');
	cmpFlag1.addEvent('click', function(evt){
		if (this.checked) {
			$('cmpClickCostField').addClass('hidden');
			$('cmpAmountPaidField').addClass('hidden');
			$('cmpClickAmount').addClass('hidden');
			
			disposeValidation($('cmpClickCost'));
			disposeValidation($('cmpAmountPaid'));
		} else {
			$('cmpClickCostField').removeClass('hidden');
			$('cmpAmountPaidField').removeClass('hidden');
			$('cmpClickAmount').removeClass('hidden');
			
			registerValidation($('cmpClickCost'));
			registerValidation($('cmpAmountPaid'));
		}
	});
	cmpFlag1.fireEvent('click');
	
	$('dateFrom').addEvent('change', addNewDate);
	$('dateTo').addEvent('change', addNewDate);
	$('timeFrom').addEvent('change', addNewTime);
	$('timeTo').addEvent('change', addNewTime);
	$('ipFrom').addEvent('change', addNewIp);
	$('ipTo').addEvent('change', addNewIp);
	$('addIp').addEvent('click', addNewNode);
	$('nodeName').addEvent('keypress', addNewNode);
	$('nodeName').addEvent('blur', addNewNode);
	$('addNode').addEvent('click', addNewNode);
	
	$('cmpWeekDay0').addEvent('click', validateAllWeekDay);
	$('cmpWeekDay1').addEvent('click', validateAllWeekDay);
	$('cmpWeekDay2').addEvent('click', validateAllWeekDay);
	$('cmpWeekDay3').addEvent('click', validateAllWeekDay);
	$('cmpWeekDay4').addEvent('click', validateAllWeekDay);
	$('cmpWeekDay5').addEvent('click', validateAllWeekDay);
	$('cmpWeekDay6').addEvent('click', validateAllWeekDay);
	
	$('cmpCondition0').addEvent('change', changedCmpCondition);
	$('cmpCondition1').addEvent('change', changedCmpCondition);
	$('cmpCondition2').addEvent('change', changedCmpCondition);
	$('cmpCondition3').addEvent('change', changedCmpCondition);
	$('cmpCondition4').addEvent('change', changedCmpCondition);
	$('cmpCondition5').addEvent('change', changedCmpCondition);
	$('cmpCondition6').addEvent('change', changedCmpCondition);
	$('cmpCondition7').addEvent('change', changedCmpCondition);
	$('cmpCondition8').addEvent('change', changedCmpCondition);
	$('cmpCondition9').addEvent('change', changedCmpCondition);
	$('cmpCondition10').addEvent('change', changedCmpCondition);
	$('cmpCondition11').addEvent('change', changedCmpCondition);
	
	$('addProfile').addEvent("click", function(e) {
		e.stop();
		PROFILEMODAL_SHOWGLOBAL = true;
		showProfilesModal(processProfilesModalReturn);
	});
	
	$('addUser').addEvent("click", function(e) {
		e.stop();
		//setear variables de configuracion del modal de grupos
		//abrir modal
		showUsersModal(processUsersModalReturn);
	});
	
	$('addPool').addEvent("click", function(e) {
		e.stop();
		//setear variables de configuracion del modal de grupos
		POOLMODAL_SHOWAUTOGENERATED = false;
		POOLMODAL_SHOWCURRENTENV = true;
		//abrir modal
		showPoolsModal(processPoolsModalReturn);
	});
	
	$('addProcess').addEvent("click", function(e) {
		e.stop();
		STATUSMODAL_SHOWGLOBAL = false;		
		showProcessModal(processProcessModalReturn);
	});

	$('addTask').addEvent("click", function(e) {
		e.stop();
		showTaskModal(processTaskModalReturn);
	});
	
	$('addFunctionality').addEvent("click", function(e) {
		e.stop();
		FNCS_ENVIRONMENT = "current";
		showFncsModal(processFunctionalityModalReturn);
	});
	
	//Variables que almacenan estado real de si la opcion de Todos se encuentra seleccionada
	procChkBoxStatus = undefined;
	taskChkBoxStatus = undefined;
	funcChkBoxStatus = undefined;
	
	$('processesContainer').onRemove = function() {
		var showAllProcesses = $('showAllProcesses');
		var theCheckbox = showAllProcesses.getElements('input[type=checkbox]');
		theCheckbox = theCheckbox != null && theCheckbox.length > 0 ? theCheckbox[0] : null;		
		if ($$('input[name=proId]').length > 0) {
			showAllProcesses.addClass('hidden'); 
			if (theCheckbox){
				theCheckbox.disabled = true;
				procChkBoxStatus = theCheckbox.checked;
				//Necesario para que valide formulario
				theCheckbox.checked = true;
			}
		} else { 
			showAllProcesses.removeClass('hidden'); 
			if (theCheckbox){ 
				theCheckbox.disabled = false;
				theCheckbox.checked = procChkBoxStatus!=undefined ? procChkBoxStatus : theCheckbox.checked;
			
			}
		}
	}
	
	$('tasksContainer').onRemove = function() {
		var showAllTasks = $('showAllTasks');
		var theCheckbox = showAllTasks.getElements('input[type=checkbox]');
		theCheckbox = theCheckbox != null && theCheckbox.length > 0 ? theCheckbox[0] : null;
		if ($$('input[name=tskId]').length > 0) { 
			showAllTasks.addClass('hidden'); 
			if (theCheckbox) {
				theCheckbox.disabled = true;
				taskChkBoxStatus = theCheckbox.checked;
				//Necesario para que valide formulario
				theCheckbox.checked = true;				
			}
		} else { 
			showAllTasks.removeClass('hidden'); 
			if (theCheckbox) {
				theCheckbox.disabled = false;
				theCheckbox.checked = taskChkBoxStatus!=undefined ? taskChkBoxStatus : theCheckbox.checked;
			}
		}
	}
	
	$('functionalitiesContainer').onRemove = function() {
		var showAllFunctionalities = $('showAllFunctionalities');
		var theCheckbox = showAllFunctionalities.getElements('input[type=checkbox]');
		theCheckbox = theCheckbox != null && theCheckbox.length > 0 ? theCheckbox[0] : null;
		if ($$('input[name=fncId]').length > 0) { 
			showAllFunctionalities.addClass('hidden'); 
			if (theCheckbox) {
				theCheckbox.disabled = true;
				funcChkBoxStatus = theCheckbox.checked;
				//Necesario para que valide formulario
				theCheckbox.checked = true;
			}
		} else { 
			showAllFunctionalities.removeClass('hidden'); 
			if (theCheckbox) {
				theCheckbox.disabled = false;
				theCheckbox.checked = funcChkBoxStatus!=undefined ? funcChkBoxStatus : theCheckbox.checked;
			}
		}
	}
	
	//Resetear imagen
	var btnResetImg = $('btnResetImg');
	if (btnResetImg){
		btnResetImg.addEvent("click",function(e){
			e.stop();
			var cmpSrcImage = $('cmpSrcImage');
			var cmpSrcImagePicker = $('cmpSrcImagePicker');
			if (DEFAULT_IMG != ''){
				cmpSrcImagePicker.style.backgroundImage = "url('"+CONTEXT + PATH_IMG + DEFAULT_IMG+"')";
			} else {
				cmpSrcImagePicker.style.backgroundImage = "url('')";
			}			
			cmpSrcImage.value = DEFAULT_IMG;
		});
	}
		
	//testear ejecutable
	var btnTest = $('btnTest');
	if (btnTest){
		btnTest.addEvent("click",function(e){
			e.stop();
			
			//se deben completar los campos requeridos
			var form = $('frmData');
			if(!form.formChecker.isFormValid()){
				return;
			}
			var params = getFormParametersToSend(form);
			var request = new Request({
				method: 'post',
				url: CONTEXT + URL_REQUEST_AJAX + '?action=test&isAjax=true' + TAB_ID_REQUEST,
				onRequest: function() { SYS_PANELS.showLoading(); },
				onComplete: function(resText, resXml) { modalProcessXml(resXml); }
			}).send(params);				
		});
	}
	
	//['btnResetImg','btnTest'].each(setTooltip);
	
	
	//Init modals
	initUsrMdlPage();
	initPoolMdlPage();
	initPrfMdlPage();
	initProcMdlPage();
	initTaskMdlPage();
	initFncMdlPage();
	initImgMdlPage();

	validateAllConditions();
	
	loadXml();
	
	getBodyController().canRemoveTab = function() { return ! AT_LEAST_ON_FIELD_INPUT_CHANGED; };
}

function changedCmpCondition(evt) {
	var container = this.getAttribute("conditionContainer");
	var container = $(container);
	
	if (this.selectedIndex == 2) { 
		container.addClass('hidden');
	} else { 
		container.removeClass('hidden'); 
	}
}

function validateAllConditions() {
	$('cmpCondition0').fireEvent('change');
	$('cmpCondition1').fireEvent('change');
	$('cmpCondition2').fireEvent('change');
	$('cmpCondition3').fireEvent('change');
	$('cmpCondition4').fireEvent('change');
	$('cmpCondition5').fireEvent('change');
	$('cmpCondition6').fireEvent('change');
	$('cmpCondition7').fireEvent('change');
	$('cmpCondition8').fireEvent('change');
	$('cmpCondition9').fireEvent('change');
	$('cmpCondition10').fireEvent('change');
	$('cmpCondition11').fireEvent('change');
}

function validateAllWeekDay(evt) {
	$('allweekdays').checked = ! (
			$('cmpWeekDay0').checked ||
			$('cmpWeekDay1').checked ||
			$('cmpWeekDay2').checked ||
			$('cmpWeekDay3').checked ||
			$('cmpWeekDay4').checked ||
			$('cmpWeekDay5').checked ||
			$('cmpWeekDay6').checked
		);
}

function processFunctionalityModalReturn(ret){
	ret.each(function(e){
		var folder = e.getRowContent()[1];
		var text = e.getRowContent()[1];
		addActionElement($('functionalitiesContainer'),folder + " - " + text,e.getRowId(),"fncId");
		$('functionalitiesContainer').onRemove();
	});
}

function processProfilesModalReturn(ret){
	ret.each(function(e){
		var text = e.getRowContent()[0];
		addActionElement($('profilesContainer'),text,e.getRowId(),"prfId");
	});
}

function processProcessModalReturn(ret){
	ret.each(function(e){
		var text = e.getRowContent()[0];
		addActionElement($('processesContainer'),text,e.getRowId(),"proId")
		$('processesContainer').onRemove();
	});
}

function processTaskModalReturn(ret){
	ret.each(function(e){
		var text = e.getRowContent()[0];
		addActionElement($('tasksContainer'),text,e.getRowId(),"tskId");
		$('tasksContainer').onRemove();
	});
}

function processPoolsModalReturn(ret){
	ret.each(function(e){
		var text = e.getRowContent()[0];
		addActionElement($('poolsContainer'),text,e.getRowId(),"poolId");
	});
}

function processUsersModalReturn(ret){
	ret.each(function(e){
		var text = e.getRowContent()[0];
		addActionElement($('usersContainer'),text,e.getRowId(),"usrLogin");
	});
}

function addNewIp(evt) {
	var ipFrom = $('ipFrom');
	var ipTo = $('ipTo');
	if (evt && ((evt.key == "enter" || ! evt.key) && ipFrom.value != "" && ipTo.value != "")) {
		addNewIpElement(ipFrom.value, ipTo.value);
		ipFrom.value = '';
		ipTo.value = '';
		ipFrom.focus();
	}
}

function addNewIpElement(ipFrom, ipTo) {
	var add = $('addIp');
	var newDay = new Element("div", {'class': 'option optionRemove'});
	newDay.addEvent('click', function(evt) { this.destroy(); });
	new Element('span', {html: ipFrom + " - " + ipTo}).inject(newDay);
	new Element('input', {type: 'hidden', name: 'cmpIpFrom', value: ipFrom}).inject(newDay);
	new Element('input', {type: 'hidden', name: 'cmpIpTo', value: ipTo}).inject(newDay);
	newDay.inject(add,"before");
}

function addNewNode(evt) {
	var nodeName = $('nodeName');
	if (evt && ((evt.key == "enter" || ! evt.key) && nodeName.value != "")) {
		if (addNewNodeElement(nodeName.value)) {
			nodeName.value = '';
			nodeName.focus();
		}
	}
}

function addNewNodeElement(nodeName) {
	
	var notAdded = true;
	
	$$('input[name=cmpNode]').each(function(ele){
		if (ele.value == nodeName) notAdded = false;
	});
	
	if (notAdded) {
		var add = $('addNode');
		var newDay = new Element("div", {'class': 'option optionRemove'});
		newDay.addEvent('click', function(evt) { this.destroy(); });
		new Element('span', {html: nodeName}).inject(newDay);
		new Element('input', {type: 'hidden', name: 'cmpNode', value: nodeName}).inject(newDay);
		newDay.inject(add,"before");
	}
	
	return notAdded;
}

function addNewDate(evt) {
	var dateFrom = $('dateFrom');
	var dateTo = $('dateTo');
	
	if (dateFrom.value != "" && dateTo.value != "") {
		addNewDateElement(dateFrom.value, dateTo.value);
		
		dateFrom.value = '';
		dateFrom.datepickerField.value = '';
		dateTo.value = '';
		dateTo.datepickerField.value = '';
	}
}

function addNewTime(evt) {
	var timeFrom = $('timeFrom');
	var timeTo = $('timeTo');
	
	if (timeFrom.value != "" && timeTo.value != "") {
		addNewTimeElement(timeFrom.value, timeTo.value);
		
		timeFrom.value = '';
		timeTo.value = '';
		timeFrom.focus();
	}
}

function addNewDateElement(dateFrom, dateTo) {
	var add = $('addDate');
	var newDay = new Element("div", {'class': 'option optionRemove'});
	newDay.addEvent('click', function(evt) { this.destroy(); });
	new Element('span', {html: dateFrom + " - " + dateTo}).inject(newDay);
	new Element('input', {type: 'hidden', name: 'cmpDateFrom', value: dateFrom}).inject(newDay);
	new Element('input', {type: 'hidden', name: 'cmpDateTo', value: dateTo}).inject(newDay);
	newDay.inject(add,"before");
}

function addNewTimeElement(timeFrom, timeTo) {
	var add = $('addTime');
	var newTime = new Element("div", {'class': 'option optionRemove'});
	newTime.addEvent('click', function(evt) { this.destroy(); });
	new Element('span', {html: timeFrom + " - " + timeTo}).inject(newTime);
	new Element('input', {type: 'hidden', name: 'cmpTimeFrom', value: timeFrom}).inject(newTime);
	new Element('input', {type: 'hidden', name: 'cmpTimeTo', value: timeTo}).inject(newTime);
	newTime.inject(add,"before");
}

function registerValidation(obj){
	if (obj.id=="bcName"){
		obj.className="validate['required','~validName']";
	}else{
		obj.className="validate['required']";
	}
	$('frmData').formChecker.register(obj);
}

function disposeValidation(obj){
	$('frmData').formChecker.dispose(obj);
}

function loadXmlValuesDates(xml) {
	$('cmpFlag5').checked = xml.getAttribute('flag') == "true";
	var elements = xml.getElementsByTagName("date");
	if (elements != null) {
		for (var i = 0; i < elements.length; i++) {
			var element = elements[i];
			addNewDateElement(element.getAttribute("from"),element.getAttribute("to"));
		}
	}
}

function loadXmlValuesTimes(xml) {
	var elements = xml.getElementsByTagName("time");
	if (elements != null) {
		for (var i = 0; i < elements.length; i++) {
			var element = elements[i];
			addNewTimeElement(element.getAttribute("from"),element.getAttribute("to"));
		}
	}
}

function loadXmlValuesIps(xml) {
	var elements = xml.getElementsByTagName("ip");
	if (elements != null) {
		for (var i = 0; i < elements.length; i++) {
			var element = elements[i];
			addNewIpElement(element.getAttribute("from"),element.getAttribute("to"));
		}
	}
}

function loadXmlValuesGenericValueText(xml, tag, container, name, flag) {
	if (flag) $(flag).checked = xml.getAttribute('flag') == "true";
	
	var elements = xml.getElementsByTagName(tag);
	if (elements != null) {
		container = $(container);
		for (var i = 0; i < elements.length; i++) {
			var element = elements[i];
			addActionElement(container,element.getAttribute("text"),element.getAttribute("value"), name);
		}
	}
}

function loadXmlValuesGenericFlags(xml) {
	for (var i = 0; i < xml.attributes.length; i++) {
		var att = xml.attributes[i];
		$(att.name).checked = att.value == "true";
	}
	
}

function loadXmlValuesGenericSelect(xml) {
	for (var i = 0; i < xml.attributes.length; i++) {
		var att = xml.attributes[i];
		var select = $(att.name);
		if (select) {
			for (var j = 0; j < select.options.length; j++) {
				if (select.options[j].value == att.value) select.selectedIndex = j;
			}
			select.fireEvent('change');
		}
	}
}

function loadXmlValues(){
	var ajaxCallXml = getLastFunctionAjaxCall().getElementsByTagName("messages")[0].getElementsByTagName("result")[0];
	
	if (ajaxCallXml != null) {
		loadXmlValuesDates(ajaxCallXml.getElementsByTagName("dates")[0]);
		loadXmlValuesTimes(ajaxCallXml.getElementsByTagName("times")[0]);
		loadXmlValuesIps(ajaxCallXml.getElementsByTagName("ips")[0]);
		loadXmlValuesGenericValueText(ajaxCallXml.getElementsByTagName("nodes")[0], 'node', 'nodesContainer', 'cmpNode');
		loadXmlValuesGenericValueText(ajaxCallXml.getElementsByTagName("users")[0], 'user', 'usersContainer', 'usrLogin');
		loadXmlValuesGenericValueText(ajaxCallXml.getElementsByTagName("pools")[0], 'pool', 'poolsContainer', 'poolId');
		loadXmlValuesGenericValueText(ajaxCallXml.getElementsByTagName("profiles")[0], 'profile', 'profilesContainer', 'prfId');
		loadXmlValuesGenericValueText(ajaxCallXml.getElementsByTagName("processes")[0], 'process', 'processesContainer', 'proId', 'cmpFlag2');
		loadXmlValuesGenericValueText(ajaxCallXml.getElementsByTagName("tasks")[0], 'task', 'tasksContainer', 'tskId', 'cmpFlag3');
		loadXmlValuesGenericValueText(ajaxCallXml.getElementsByTagName("functionalities")[0], 'functionality', 'functionalitiesContainer', 'fncId', 'cmpFlag4');
		loadXmlValuesGenericFlags(ajaxCallXml.getElementsByTagName("modules")[0]);
		loadXmlValuesGenericFlags(ajaxCallXml.getElementsByTagName("weekdays")[0]);
		loadXmlValuesGenericSelect(ajaxCallXml.getElementsByTagName("conditions")[0]);
		
		$('processesContainer').onRemove();
		$('tasksContainer').onRemove();
		$('functionalitiesContainer').onRemove();
		validateAllWeekDay();
	}
}

function loadXml(){
	var request = new Request({
		method: 'post',
		url: CONTEXT + URL_REQUEST_AJAX + '?action=getValues&isAjax=true' + TAB_ID_REQUEST,
		onRequest: function() { SYS_PANELS.showLoading(); },
		onComplete: function(resText, resXml) { modalProcessXml(resXml); SYS_PANELS.closeAll(); resetChangeHighlight(); }
	}).send();
}

function validateConditionActive(element){
	if (element.selectedIndex != 2) {
		var container = element.getAttribute("conditionContainer");
		var container = $(container);
		
		var hiddens = container.getElements('input[type=hidden]');
		var chekcboxes = container.getElements('input[type=checkbox]');

		var oneChekboxSelected = true;
		
		if (chekcboxes && chekcboxes != null && chekcboxes.length > 0) {
			oneChekboxSelected =  false;
			var atLeastOneCheckbox = false;
			for (var i = 0; i < chekcboxes.length && ! oneChekboxSelected; i++) {
				//if (chekcboxes[i].disabled) continue;
				oneChekboxSelected = chekcboxes[i].checked;
				atLeastOneCheckbox = true;
			}
			if (atLeastOneCheckbox && !oneChekboxSelected) {
				element.errors.push("This field is required.");
				return false;
			}
		} else if (hiddens == null || hiddens.length == 0) {
			element.errors.push("This field is required.");
			return false;
		}
	}
	
	return true;
}

function processModalImageConfirm(image) {
	var poolImage = $('poolImage');
	
	$('cmpSrcImagePicker').setStyle('background-image', 'url(' + image.path + ')');
	$('cmpSrcImage').value = image.id;
}

function processXmlPanelTest(){
	SYS_PANELS.closeAll();
	
	var width = Number.from(frameElement.getParent("body").clientWidth);
	var height = Number.from(frameElement.getParent("body").clientHeight);
	width = (width*50)/100; //50%
	height = (height*50)/100; //50%
	
	var modal = ModalController.openWinModal(CONTEXT + '/page/administration/campaigns/resultTestCampaign.jsp?' + TAB_ID_REQUEST, width, height, undefined, undefined, true, true, false);													
}
