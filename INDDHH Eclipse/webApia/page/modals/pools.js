var POOLMODAL_HIDE_OVERFLOW	= true;

function initPoolMdlPage(){
	var mdlPoolContainer = $('mdlPoolContainer');
	if (mdlPoolContainer.initDone) return;
	mdlPoolContainer.initDone = true;
	
	mdlPoolContainer.blockerModal = new Mask();
	
	['orderByNamePoolMdl','orderByDescPoolMdl'].each(function(ele){
		ele = $(ele);
		ele.set('title', GNR_ORDER_BY + ele.get("title"))
	});
	
	['nameFilterPoolMdl','descFilterPoolMdl'].each(function(ele) {
		ele = $(ele);
		ele.setFilterPool = setFilterPool;
		ele.oldValue = ele.value;
		ele.addEvent("keyup", function(e) {
			if (this.oldValue == this.value) return;
			if (this.timmer) $clear(this.timmer);
			this.oldValue = this.value;
			this.timmer = this.setFilterPool.delay(200, this);
			
		});		
	});
	
	$('closeModalPool').addEvent("click", function(e) {
		if(e) e.stop();
		closePoolsModal();
	}).addEvent('keypress', Generic.enterKeyToClickListener);
	
	$('clearFiltersPool').addEvent("click", function(e) {
		if(e) e.stop();
		['nameFilterPoolMdl'].each(clearFilter);
		$('descFilterPoolMdl').value="";
		
		$('nameFilterPoolMdl').setFilterPool();
	}).addEvent('keypress', Generic.enterKeyToClickListener);
	
	var confirmModalPool = $('confirmModalPool').addEvent("click", function(e) {
		var mdlPoolContainer = $('mdlPoolContainer');
		if (mdlPoolContainer.onModalConfirm) jsCaller(mdlPoolContainer.onModalConfirm,getSelectedRows($('tableDataPool')));
		closePoolsModal();
	}).addEvent('keypress', Generic.enterKeyToClickListener).addEvent('keydown', function(e) {
		if(!e.shift && e.key == 'tab') {
			e.preventDefault();
			mdlPoolContainer.focus();
		}
	});
	
	mdlPoolContainer.addEvent('keydown', function(e) {
		
		if(e.target == mdlPoolContainer && e.shift && e.key == 'tab') {
			e.preventDefault();
			confirmModalPool.focus();
		}
	});
	
	//Evento doble-click con misma funcionalidad que boton confirmar
	$('tableDataPool').getParent().addEvent("dblclick", function(e) {
		if (mdlPoolContainer.onModalConfirm) jsCaller(mdlPoolContainer.onModalConfirm,getSelectedRows($('tableDataPool')));
		closePoolsModal();
	});
	
	//eventos para order
	['orderByNamePoolMdl','orderByDescPoolMdl'].each(function(ele){
		$(ele).addEvent("click", function(e) {
			e.stop();
			callNavigateOrder(this.getAttribute('data-sortBy'),this,'/apia.modals.PoolsAction.run', 'Pool');
		});
	});
	
	window.sp_Pool = new Spinner($('tableDataPool').getParent('table'), {message: WAIT_A_SECOND});
	window.sp_Pool.content.getParent().addClass('mdlSpinner');
	
	initNavButtons('/apia.modals.PoolsAction.run','Pool');
}

//variables para valores fijos del modal
//se deben setear desde el js/jsp que usa el modal
var POOLMODAL_SHOWAUTOGENERATED = false;
var POOLMODAL_SHOWNOTAUTOGENERATED = false;
var POOLMODAL_FROMENVS = "";
var POOLMODAL_SHOWCURRENTENV = false;
var POOLMODAL_SHOWGLOBAL = false;
var POOLMODAL_EXACTMATCH = ""; 
var POOLMODAL_SELECTONLYONE	= false;
var POOLMODAL_FOR_HIERARCHY = false;
var POOLMODAL_ONLY_IN_HIERARCHY = false;		//Solo los grupos que esten en la jerarquia
var POOLMODAL_ONLY_OUTSIDE_HIERARCHY = false;	//Solo los grupos que no esten en la jerarquia
var REFRESH_PARAMETERS = false;

var FETCH_ALL_IN_HIERARCHY = false;	//Cuando trae solo los de jerarquia, si fitra por los que admnistra, o trae todos

//establecer un filtro
function setFilterPool(){
	callNavigateFilter({
		txtName: $('nameFilterPoolMdl').value,
		txtDesc: $('descFilterPoolMdl').value,
		showAutogenerated : POOLMODAL_SHOWAUTOGENERATED,
		showNotAutogenerated : POOLMODAL_SHOWNOTAUTOGENERATED,
		showCurrentEnv: POOLMODAL_SHOWCURRENTENV,
		showGlobal : POOLMODAL_SHOWGLOBAL,
		fromEnvs : POOLMODAL_FROMENVS,
		exactMatch : POOLMODAL_EXACTMATCH,
		selectOnlyOne: POOLMODAL_SELECTONLYONE,
		forHierarchy: POOLMODAL_FOR_HIERARCHY,
		showOnlyPoolsInHierarchy: POOLMODAL_ONLY_IN_HIERARCHY,
		showOnlyPoolsOutsideHierarchy: POOLMODAL_ONLY_OUTSIDE_HIERARCHY,
		refreshParameters: REFRESH_PARAMETERS,
		fetchAllInHierarchy: FETCH_ALL_IN_HIERARCHY
		},null,'/apia.modals.PoolsAction.run', 'Pool');
}

//establecer el orden
function setOrderByClass(obj){
	obj.toggleClass("orderedBy");
	if(obj.hasClass("unsorted")){
		obj.removeClass("unsorted")
		obj.addClass("sortUp");
	} else {
		if(obj.hasClass("sortUp")){
			obj.removeClass("sortUp")
			obj.addClass("sortDown");
		}else{
			obj.addClass("sortUp")
			obj.removeClass("sortDown");
		}
	}
}

function removeOrderByClass(obj){
	$('poolsTrOrderBy').getElements(".orderedBy").each(function(item, index){
	    item.removeClass("orderedBy");
	});
	
	$('poolsTrOrderBy').getElements(".sortUp").each(function(item, index){
		if(obj!=item){
			item.removeClass("sortUp");
			item.addClass("unsorted");
		}
	});
	
	$('poolsTrOrderBy').getElements(".sortDown").each(function(item, index){
		if(obj!=item){
			item.removeClass("sortDown");
			item.addClass("unsorted");
		}
	});
}

function showPoolsModal(retFunction, closeFunction){
	
	if(POOLMODAL_HIDE_OVERFLOW) {
		$(document.body).setStyle('overflow', 'hidden');
	}
	
	setFilterPool();
	unSelectAllRows($('tableDataPool'));

	var mdlPoolContainer = $('mdlPoolContainer');
	mdlPoolContainer.removeClass('hiddenModal');
	mdlPoolContainer.position();
	mdlPoolContainer.blockerModal.show();
	mdlPoolContainer.blockerModal.element.setStyle('zIndex', SYS_PANELS.getNewZIndex());
	mdlPoolContainer.setStyle('zIndex', SYS_PANELS.getNewZIndex());
	mdlPoolContainer.onModalConfirm = retFunction;
	mdlPoolContainer.onModalClose = closeFunction;
	
	
	mdlPoolContainer.focus();
}

function closePoolsModal(){
	var mdlPoolContainer = $('mdlPoolContainer');
	
	if(Browser.chrome || Browser.firefox || Browser.safari) {
		var morph = new Fx.Morph(mdlPoolContainer, {duration: 200, wait: false});
		
		morph.start({
			'margin-top': '-10px',
			'opacity': 0
		}).chain(function() {
			
			mdlPoolContainer.addClass('hiddenModal');
			mdlPoolContainer.setStyles({
				'opacity': 1,
				'margin-top': ''
			}); //Limpiar la transicion
						
			mdlPoolContainer.blockerModal.hide();
			if (mdlPoolContainer.onModalClose) mdlPoolContainer.onModalClose();
			
			if(POOLMODAL_HIDE_OVERFLOW) {
				$(document.body).setStyle('overflow', '');
			}
		});
	} else {
		
		mdlPoolContainer.addClass('hiddenModal');
		
		mdlPoolContainer.blockerModal.hide();
		if (mdlPoolContainer.onModalClose) mdlPoolContainer.onModalClose();
		
		if(POOLMODAL_HIDE_OVERFLOW) {
			$(document.body).setStyle('overflow', '');
		}
	}
}