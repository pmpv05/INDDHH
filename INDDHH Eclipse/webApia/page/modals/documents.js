var table; 
var addNewDoc;
var docType;
var newDoc;
	
var DOCUMENTMODAL_HIDE_OVERFLOW = true;

function initDocumentMdlPage(prefix) {
	var mdlDocumentContainer = $('mdlDocumentContainer');
	if (mdlDocumentContainer.initDone) return;
	mdlDocumentContainer.initDone = true;
	
	$('frmModalDocumentUpload').formChecker = new FormCheck(
		'frmModalDocumentUpload',
		{
			submit:false,
			display : {
				keepFocusOnError : 1,
				tipsPosition: 'left',
				tipsOffsetX: -10
			}
		}
	);
	
	mdlDocumentContainer.blockerModal = new Mask();
	
	var mdlDocumentInfo = $('mdlDocumentInfo');
	mdlDocumentInfo.blockerModal = new Mask();
	
	var mdlDocumentAddPool = $('mdlDocumentAddPool');
	var mdlDocumentAddUser = $('mdlDocumentAddUser');
	var btnCloseDocumentModal = $('btnCloseDocumentModal');
	var btnCloseDocumentModalInfo = $('btnCloseDocumentInfo');
	var btnConfirmDocumentModal = $('btnConfirmDocumentModal');
	
	docType = {'id':null,'free':null};
	
	var cmbDocType = $('cmbDocType');
	if (cmbDocType){
		cmbDocType.addEvent("change",function(e){
			if (e) e.stop();
			
			docType.id = this.value;
			docType.free = toBoolean(this.options[this.selectedIndex].get("data-free"));
			
			var strMetadata = "";
/*			
			table.getElements("tr").each(function(tr){
				if (!tr.getRowFree()){
					if (strMetadata != "") strMetadata += ";";
					strMetadata += tr.getRowName() + PRIMARY_SEPARATOR + tr.getRowType() + PRIMARY_SEPARATOR + tr.getRowValue();					
				}				
			});
*/			
			var extra = $('mdlDocumentContainer').extraProperties;
			var url = (extra && extra.url_aux) ? extra.url_aux : URL_REQUEST_AJAX;
			
			if(PRIMARY_SEPARATOR_IN_BODY) {
				new Request({
					method: 'post',
					url: CONTEXT + url + '?action=reloadMetadata&isAjax=true&docTypeId=' + docType.id + TAB_ID_REQUEST + ((extra && extra.params) ? '&' + extra.params : '') + "&prefix=" + $('mdlDocumentContainer').get("data-prefix"),
					onRequest: function() { SYS_PANELS.showLoading(); },
					onComplete: function(resText, resXml) { 
						processXmlMetadata(resXml); 
					}
				}).send('metadata=' + strMetadata);
			} else {
				new Request({
					method: 'post',
					url: CONTEXT + url + '?action=reloadMetadata&isAjax=true&docTypeId=' + docType.id + '&metadata=' + encodeURIComponent(strMetadata) + TAB_ID_REQUEST + ((extra && extra.params) ? '&' + extra.params : '') + "&prefix=" + $('mdlDocumentContainer').get("data-prefix"),
					onRequest: function() { SYS_PANELS.showLoading(); },
					onComplete: function(resText, resXml) { 
						processXmlMetadata(resXml); 
					}
				}).send();
			}
		});
	}
	
	var btnAddMeta = $('btnAddMeta');
	if (btnAddMeta){
		btnAddMeta.addEvent("click",function(e){
			e.stop();
			if (docType && docType.free){
				addMetadata(null, null, "S", true, "", "", true, null);				
				fixTableMetadata();
			}			
		});
	}
	
	var btnDeleteMeta = $('btnDeleteMeta');
	if (btnDeleteMeta){
		btnDeleteMeta.addEvent("click",function(e){
			e.stop();
			if (docType && docType.free){
				if (selectionCount(table) == 0) {
					showMessage(GNR_CHK_AT_LEAST_ONE, GNR_TIT_WARNING, 'modalWarning');
				} else {
					var selecteds = getSelectedRows(table);
					for (var i = 0; i < selecteds.length; i++){
						deleteRowMetadata(selecteds[i]);
					}				
					fixTableMetadata();
				}
			}
		});
	}
	
	if (mdlDocumentAddPool) {
		mdlDocumentAddPool.addEvent("click", function(e) {
			if(e) e.stop();
			//setear variables de configuracion del modal de grupos
			//POOLMODAL_SHOWAUTOGENERATED = true;
			//abrir modal
			$('mdlDocumentContainer').addClass('hiddenModal');
			showPoolsModal(docProcessPoolsModalReturn, docProcessPoolsUsersModalClose);
		});
		mdlDocumentAddPool.addEvent('keypress', Generic.enterKeyToClickListener);
	}
	
	if (mdlDocumentAddUser) {
		mdlDocumentAddUser.addEvent("click", function(e) {
			if(e) e.stop();
			
			USERMODAL_GLOBAL_AND_ENV = true;
			
			$('mdlDocumentContainer').addClass('hiddenModal');
			showUsersModal(docProcessUsersModalReturn, docProcessPoolsUsersModalClose);
		});
		mdlDocumentAddUser.addEvent('keypress', Generic.enterKeyToClickListener);
	}
	
	if (btnCloseDocumentModal) {
		btnCloseDocumentModal.addEvent("click", closeDocumentsModal);
		btnCloseDocumentModal.addEvent('keypress', Generic.enterKeyToClickListener);
	}
	if(btnCloseDocumentModalInfo){
		btnCloseDocumentModalInfo.addEvent("click", closeDocumentModalInfo);
	}
	
	if (btnConfirmDocumentModal) {
		
		btnConfirmDocumentModal.progressMessages		= $("documentProgressMessages");
		btnConfirmDocumentModal.progressBar				= $("documentProgressBar");
		btnConfirmDocumentModal.progressBarContainer	= $("documentProgressBarContainer");
		btnConfirmDocumentModal.prefix = prefix;
		btnConfirmDocumentModal.showProgressBar = function() {
			if (this.progressMessages) this.progressMessages.empty();
			if (this.progressBar) this.progressBar.style.width = "0px";
		};
		
		btnConfirmDocumentModal.callUpdateStatus = function() {
			var extra = $('mdlDocumentContainer').extraProperties;
			var extra_params = "";
			if(extra && extra.params)
				extra_params = extra.params;
			
			var url = (extra && extra.url_aux) ? extra.url_aux : URL_REQUEST_AJAX;
			
			new Request({
				method: 'post',
				url: CONTEXT + url + "?action=ajaxUploadFileStatus" + extra_params + "&isAjax=true" + TAB_ID_REQUEST + "&prefix=" + $('mdlDocumentContainer').get("data-prefix"),
				onComplete: function(resText, resXml) { modalProcessXml(resXml);  }
			}).send();
		}
		
		btnConfirmDocumentModal.addEvent('click', function(evt){
			//validar datos del formulario
			var form = $('frmModalDocumentUpload');
			if(!form.formChecker.isFormValid() || !validFreeMetadataTitles()){
				return;
			}			
			
			var extra = $('mdlDocumentContainer').extraProperties;
			var extra_params = "";
			if(extra && extra.params)
				extra_params = extra.params;
			
			var url = (extra && extra.url_aux) ? extra.url_aux : URL_REQUEST_AJAX;
			
			var txtMetadata = ""; //id�type�value;id�type�value...
			var txtFreeMetadata = ""; //title�value;title�value...
/*			
			$('tableMetadata').getElements("tr").each(function (tr){ 
				if (tr.getRowValue() != ""){ //no se guardan los que no tienen valor
					
					if (!tr.getRowFree()){ //fijo
						if (txtMetadata != "") txtMetadata += ";";
						txtMetadata += tr.getRowId() + PRIMARY_SEPARATOR + tr.getRowType() + PRIMARY_SEPARATOR + tr.getRowValue();
						
					} else { //free
						if (txtFreeMetadata != "") txtFreeMetadata += ";";
						var inputTitle = tr.getRowInputTitle();
						txtFreeMetadata += inputTitle.value + PRIMARY_SEPARATOR + tr.getRowValue();
					}
					
				}
			});
*/			
			if(PRIMARY_SEPARATOR_IN_BODY) {
				var frmModalDocumentUpload = $('frmModalDocumentUpload');
				frmModalDocumentUpload.action = CONTEXT + url + "?action=ajaxUploadFile" + extra_params + "&isAjax=true" + TAB_ID_REQUEST + "&prefix=" + $('mdlDocumentContainer').get("data-prefix");
				
				var txtMetadataAux = $('txtMetadataAux');
				if(txtMetadataAux)
					txtMetadataAux.destroy();
				
				var txtFreeMetadataAux = $('txtFreeMetadataAux');
				if(txtFreeMetadataAux)
					txtFreeMetadataAux.destroy();
				
				frmModalDocumentUpload.grab(new Element('input', {
					id: 'txtMetadataAux',
					name: 'txtMetadata',
					type: 'hidden'
				}).set('value', txtMetadata));
				
				frmModalDocumentUpload.grab(new Element('input', {
					id: 'txtFreeMetadataAux',
					name: 'txtFreeMetadata',
					type: 'hidden'
				}).set('value', txtFreeMetadata));
				
				var txtLangId = $('txtLangId');
				if(txtLangId) txtLangId.destroy();
				
				var txtLangGroup = $('txtLangGroup');
				if(txtLangGroup) txtLangGroup.destroy();
				
				frmModalDocumentUpload.grab(new Element('input', {
					id: 'txtLangId',
					name: 'txtLangId',
					type: 'hidden'
				}).set('value', extra.langId));
				
				frmModalDocumentUpload.grab(new Element('input', {
					id: 'txtLangGroup',
					name: 'txtLangGroup',
					type: 'hidden'
				}).set('value', extra.docLangGroup));
			} else {
				if(extra.langId)
					extra_params += '&txtLangId=' + extra.langId;
				
				if(extra.docLangGroup)
					extra_params += '&txtLangGroup=' + extra.docLangGroup;
				
				$('frmModalDocumentUpload').action = CONTEXT + url + "?action=ajaxUploadFile" + extra_params + "&isAjax=true" + TAB_ID_REQUEST + "&prefix=" + $('mdlDocumentContainer').get("data-prefix") + "&txtMetadata=" + txtMetadata + "&txtFreeMetadata=" + txtFreeMetadata;
			}
			
			$('frmModalDocumentUpload').submit();
			this.showProgressBar();
			this.callUpdateStatus.delay(200);
		});
		
		btnConfirmDocumentModal.addEvent('keypress', Generic.enterKeyToClickListener);
		
		btnConfirmDocumentModal.addEvent('keydown', function(e) {
			if(!e.shift && e.key == 'tab') {
				e.preventDefault();
				mdlDocumentContainer.focus();
			}
		});
	}
	
	mdlDocumentContainer.addEvent('keydown', function(e) {
		
		if(e.target == mdlDocumentContainer && e.shift && e.key == 'tab') {
			e.preventDefault();
			btnConfirmDocumentModal.focus();
		}
	});
	
}

function ajaxUploadUpdateStatus() {
	var doCall = false;
	var doClose = true;
	var ajaxCallXml = getLastFunctionAjaxCall();
	if (ajaxCallXml != null) {
		var messages = ajaxCallXml.getElementsByTagName("messages");
		
		if (messages != null && messages.length > 0 && messages.item(0) != null) {
			messages = messages.item(0).getElementsByTagName("message");
			
			var status		= null;
			var totalRead	= 0;
			var totalSize	= 1;
			var theMessage	= "";
			
			for(var i = 0; i < messages.length; i++) {
				var message = messages.item(i);
				var param	= message.getAttribute("name");
				var text 	= "";
				
				if (message.firstChild != null) text = message.firstChild.nodeValue;
				
				if ("status" == param) {
					status = text;
				
				} else if ("totalRead" == param) {
					totalRead = text;
				
				} else if ("totalSize" == param) {
					totalSize = text;
					
				} else if ("message" == param) {
					theMessage = text;
				}
			}

			var progressMessages		= $("documentProgressMessages");
			var progressBar				= $("documentProgressBar");
			var progressBarContainer	= $("documentProgressBarContainer");

			if (progressBar != null && progressBarContainer != null)	progressBar.style.width = (progressBarContainer.offsetWidth * parseInt((totalRead / totalSize) * 100) / 100) + "px";
			if (progressMessages != null) {
				if(status == 3){
					progressBar.style.width = "0px";
					showMessage(theMessage, "Error", "modalError");
				} else {
					progressMessages.innerHTML = theMessage;
				}
			}
			
			doCall = status == -1 || status == 1;
			doClose = (theMessage == null || theMessage == "") && ! doCall;
		}
	}
	
	if (doCall) { 
		$('btnConfirmDocumentModal').callUpdateStatus.delay(200);
	} else if (doClose) {
		SYS_PANELS.closeAll();
	}
	
	return true;
}

function docProcessPoolsUsersModalClose() {
	$('mdlDocumentContainer').removeClass('hiddenModal').focus();
}

function docProcessPoolsModalReturn(ret) {
	ret.each(function(e){
		var text = e.getRowContent()[0];
		var id = e.getRowId();
		
		docProcessModalReturn(id, text, false, true);
	});
}

function docProcessUsersModalReturn(ret) {
	ret.each(function(e){
		var text = e.getRowContent()[0];
		var id = e.getRowId();
		
		docProcessModalReturn(id, text, false, false);
	});
}

function docProcessModalReturn(id, text, canUpdate, pool, info) {
	var mdlDocumentContainer = $('mdlDocumentContainer');
	
	var checkIn = pool ? mdlDocumentContainer.addedPools : mdlDocumentContainer.addedUsers;
	
	if (checkIn.indexOf(id) != -1) return;
	checkIn.include(id);
	
	var optionClass = pool ? 'optionPool' : 'optionUser';
	var hiddenName = pool ? 'docPoolId' : 'docUserId';
	var hiddenName2 = pool ? 'docPoolName' : 'docUsrLogin';
	
	var span = new Element("span", {'class': 'option canRemove'});
	new Element('div', {'class': optionClass, html: '&nbsp;'}).inject(span);
	new Element('span', {html: text + ' ' + LBL_CAN_UPDATE + ': '}).inject(span);
	new Element('input', {type: 'hidden', name: hiddenName, value: id}).inject(span);
	new Element('input', {type: 'hidden', name: hiddenName2, value: text}).inject(span);
	var option = new Element('input', {type: 'checkbox', name: 'docPermType' + id, value: 'true', checked: canUpdate});
	if (info) option.setAttribute('disabled','');
	option.inject(span);
	
	span.checkIn = checkIn;
	span.idCheckIn = id;
	
	if (!info){
		new Element('div.optionRemove', {tabIndex: ''}).addEvent('click', function(evt) {
			var p = this.getParent();
			p.checkIn.erase(p.idCheckIn);
			p.destroy();
			mdlDocumentContainer.focus();
		}).addEvent('keypress', Generic.enterKeyToClickListener).inject(span);	
	}
 
	
	//var divider = $('mdlDocumentPoolContainterDivider' + (info? 'Info' : ''));
	//span.inject(divider, 'before');
	var permContainer = $('scrollOptions' + (info? 'Info' : ''));
	
	span.inject(permContainer);
	$('mdlDocumentContainer').position();
}


function showDocumentsModal(retFunction, docId, extra, docInfo, hidePermissiosn, hideMetadata, retFunctionClose){
	if(DOCUMENTMODAL_HIDE_OVERFLOW) {
		$(document.body).setStyle('overflow', 'hidden');
	}
	
	table = $('tableMetadata');
	addNewDoc = true;

	var frmModalDocumentUpload = $('frmModalDocumentUpload');
	if(frmModalDocumentUpload)
		frmModalDocumentUpload.reset();
	
	if(hidePermissiosn)
		$('permission').setStyle('display', 'none');
	else
		$('permission').setStyle('display', '');
	
	if(hideMetadata)
		$('metadata').setStyle('display', 'none').set('data-hideMetadata', 'true');
	else
		$('metadata').setStyle('display', '').set('data-hideMetadata', 'false');
	
	$('documentModalDocFile').value = '';
	$('documentModalDocDesc').value = '';
	
	
	
	
	
	$('mdlDocumentPoolContainter').getElements("span.canRemove").each(function(ele) { ele.dispose(); });
	$("documentProgressMessages").innerHTML = "";
	$('documentProgressBar').style.width = '0px';
	
	var mdlDocumentContainer = $('mdlDocumentContainer');
	mdlDocumentContainer.addedPools = [];
	mdlDocumentContainer.addedUsers = [];
	mdlDocumentContainer.setStyle('zIndex', SYS_PANELS.getNewZIndex());
	mdlDocumentContainer.onModalConfirm = retFunction;
	mdlDocumentContainer.onModalClose = retFunctionClose;
	mdlDocumentContainer.extraProperties = extra;
	
	
	if(DOCUMENT_EVERYONE_PERMISSION=="false") {
		$('selDocAllPoolPerm').selectedIndex = 2;
		docProcessModalReturn(CURRENT_USER_LOGIN, CURRENT_USER_LOGIN, true, false);
	} else {
		$('selDocAllPoolPerm').selectedIndex = 0;
	}
	
	if(DOCUMENT_OWNER_PRIVILEGES=="true"){
		docProcessModalReturn(CURRENT_USER_LOGIN, CURRENT_USER_LOGIN, true, false);
	}
	
	var frmData = $('frmData');
	if(frmData)
		frmData.formChecker.reinitialize('forced');
	
	if (! docId) docId = "";
	if (! extra) extra = {};
	if (! docInfo) docInfo = {};
	var action = "ajaxUploadStart";
	if (extra.action!=null){
		action =extra.action; 
	}
	
	if(extra.params) {
		action += extra.params;
	}
	
	var strParamsDocTypePermitted = '';
		
	if (docId == ""){ //subir archivo nuevo
		$('cmbDocType').value = DEFAULT_DOC_TYPE_ID; //DEFAULT
		$('cmbDocType').setStyle("display","");
		$('spanDocType').innerHTML = "";
		$('spanDocType').setStyle("display","none");		
		docType.id = DEFAULT_DOC_TYPE_ID;
		docType.free = false;
		newDoc = true;		
		if (extra.docTypePermitted){
			var useDocTypePermitted = extra.docTypePermitted.use;
			var docTypePermittedObjType = extra.docTypePermitted.objType;
			var docTypePermittedObjId = extra.docTypePermitted.objId;
			strParamsDocTypePermitted = '&useDocTypePermitted=' + useDocTypePermitted + '&docTypePermittedObjType=' + docTypePermittedObjType + '&docTypePermittedObjId=' + docTypePermittedObjId
		}
	} else { //subir version nueva
		$('cmbDocType').value = docInfo.docTypeId;
		$('cmbDocType').setStyle("display","none");
		$('spanDocType').innerHTML = docInfo.docTypeLabel;
		$('spanDocType').setStyle("display","");
		docType.id = docInfo.docTypeId;
		docType.free = toBoolean(docInfo.docTypeFreeMetadata);
		newDoc = false;		
	}		
	
	var url = (extra && extra.url_aux) ? extra.url_aux : URL_REQUEST_AJAX;
	
	$('mdlDocumentContainer').set("data-prefix",extra.prefix);
	
	new Request({
		method: 'post',
		url: CONTEXT + url + "?action="+action+"&isAjax=true&docId=" + docId + TAB_ID_REQUEST + "&prefix=" + extra.prefix + "&docTypeId=" + docType.id + "&newDoc=" + newDoc + strParamsDocTypePermitted,
		onComplete: function(resText, resXml) { 
			modalProcessXml(resXml);
		}
	}).send(extra);
}


function showDocumentInfo(docInfo, extra, hideMetadata, avoidDownload){
	table = $('tableMetadataInfo');
	addNewDoc = false;
	
	if(hideMetadata)
		$('metadataInfo').setStyle('display', 'none');
	else
		$('metadataInfo').setStyle('display', '');
	
	docType.id = docInfo.docTypeId;
	docType.free = toBoolean(docInfo.docTypeFreeMetadata);
	docType.avoidDownload = avoidDownload;
	
	var mdlDocumentContainer = $('mdlDocumentContainer');
	mdlDocumentContainer.addedPools = [];
	mdlDocumentContainer.addedUsers = [];
		
	$('mdlDocumentPoolContainterInfo').getElements("span.canRemove").each(function(ele) { ele.dispose(); });
	
	new Request({
		method: 'post',
		url: CONTEXT + URL_REQUEST_AJAX + "?action=getDocumentInfo&isAjax=true&docId=" + docInfo.docId + TAB_ID_REQUEST + "&prefix=" + extra.prefix,
		onComplete: function(resText, resXml) { 
			modalProcessXml(resXml); 
		
			//Se actualiza posición del modal
			var mdlDocumentInfo = $('mdlDocumentInfo');
			mdlDocumentInfo.position();
			mdlDocumentInfo.blockerModal.show();
			mdlDocumentInfo.setStyle('zIndex', SYS_PANELS.getNewZIndex());
		
		}
	}).send();
	
	$('mdlDocumentInfo').removeClass('hiddenModal');
}

/**
 * Esta funcion se ejecuta al presionar el boton lock/unlock luego de volver del servidor
 */
function lockDocument(){
	var ajaxCallXml = getLastFunctionAjaxCall();
	//docLockIconUnlocked
	//docLockIconLocked
	var xmlGenerals = ajaxCallXml.getElementsByTagName('general');
	if (xmlGenerals != null) {
		for (var i = 0; i < xmlGenerals.length; i++) {
			var xmlGeneral = xmlGenerals[i];
			var locked = xmlGeneral.getAttribute("locked");
			var docId = xmlGeneral.getAttribute("docId");
			var prefix = xmlGeneral.getAttribute("prefix");
			var usrLocking = xmlGeneral.getAttribute("userLocking");
			if(locked=='true' || usrLocking==CURRENT_USER_LOGIN){
				$('lck'+docId+prefix).removeClass('docLockIconUnlocked');
				$('lck'+docId+prefix).removeClass('docLockIconLockedOther');
				$('lck'+docId+prefix).parentElement.docInfo.docLock = true;
				$('lck'+docId+prefix).parentElement.docInfo.docUserLocking = usrLocking;
				$('lck'+docId+prefix).addClass('docLockIconLocked');
			} else if (locked=='false' || usrLocking=='') {
				$('lck'+docId+prefix).removeClass('docLockIconLocked');
				$('lck'+docId+prefix).removeClass('docLockIconLockedOther');
				$('lck'+docId+prefix).parentElement.docInfo.docLock = false;
				$('lck'+docId+prefix).parentElement.docInfo.docUserLocking = usrLocking;
				$('lck'+docId+prefix).addClass('docLockIconUnlocked');
			} else {
				$('lck'+docId+prefix).removeClass('docLockIconUnlocked');
				$('lck'+docId+prefix).removeClass('docLockIconLocked');
				$('lck'+docId+prefix).parentElement.docInfo.docLock = false;
				$('lck'+docId+prefix).parentElement.docInfo.docUserLocking = usrLocking;
				$('lck'+docId+prefix).addClass('docLockIconLockedOther');
				$('lck'+docId+prefix).set('title', locked);
			}
			
		}			
	}
	
}

/**
 * Esta funcion carga el modal de informacion adicional de un documento
 */
function populateDocInfo(){
	var ajaxCallXml = getLastFunctionAjaxCall();
	//var xmlGenerals = ajaxCallXml.getChildren(0).getChildren('general');
	var xmlGenerals = ajaxCallXml.childNodes[0].getElementsByTagName('general');
	if (xmlGenerals != null) {
		for (var i = 0; i < xmlGenerals.length; i++) {
			var xmlGeneral = xmlGenerals[i];
			var docId = xmlGeneral.getAttribute("docId");
			var downloadDocId = xmlGeneral.getAttribute("downloadDocId");
			var docName = xmlGeneral.getAttribute("docName");
			var docDesc = xmlGeneral.getAttribute("docDesc");
			var prefix = xmlGeneral.getAttribute("prefix");
			var docTypeLabel = xmlGeneral.getAttribute("docTypeLabel");
			var docAllPoolPerm = xmlGeneral.getAttribute("docAllPoolPerm");
		 
			$('lblNom').innerHTML = docName;
			$('docDesc').innerHTML = docDesc;
			$('docTypeLabel').innerHTML = docTypeLabel;
			switch (docAllPoolPerm){
			case 'M' 	:	$('selDocAllPoolPermInfo').selectedIndex = 0; break;
			case 'R'	:	$('selDocAllPoolPermInfo').selectedIndex = 1; break;
			default		: 	$('selDocAllPoolPermInfo').selectedIndex = 2; break;
			}
			

		}
	}
	
	var xmlPermisions = ajaxCallXml.getElementsByTagName('permissions'); //IE Friendly
	if (xmlPermisions != null && xmlPermisions.length) {
		
		xmlPermisions = xmlPermisions[0];
		
		var xmlUsers = xmlPermisions.getElementsByTagName('user');
		var xmlPools = xmlPermisions.getElementsByTagName('pool');
		
		if (xmlUsers != null) {
			for (var i = 0; i < xmlUsers.length; i++) {
				var xml = xmlUsers[i];
				var permType = xml.getAttribute("permType");
				var id = xml.getAttribute("id");
				var name = xml.getAttribute("name");
				
				docProcessModalReturn(id, name, permType=='M', false, true);
			}
		}
		
		if (xmlPools != null) {
			for (var i = 0; i < xmlPools.length; i++) {
				var xml = xmlPools[i];
				var permType = xml.getAttribute("permType");
				var id = xml.getAttribute("id");
				var name = xml.getAttribute("name");
				
				docProcessModalReturn(id, name, permType=='M', true, true);
			}
		}
	}
	
	
	//tblDocHistory
	//var xmlVersions = ajaxCallXml.getChildren(0).getChildren('versions')[0].getChildren('version')[0];
	var xmlVersions = ajaxCallXml.childNodes[0].getElementsByTagName('version');
	if (xmlVersions != null) {
		var object = $('tblDocHistory');
		var newBody = new Element("tbody");
		newBody.id = object.id;
		var parent = object.getParent();
		object.dispose();
		newBody.inject(parent);
		object = newBody;
		
		for (var i = 0; i < xmlVersions.length; i++) {
			var xmlVersion = xmlVersions[i];
			var verNumber = xmlVersion.getAttribute('verNumber');
			var verDate = xmlVersion.getAttribute('verDate');
			var verUser = xmlVersion.getAttribute('verUser');
			
			var tr = new Element('tr');
			var td1 = new Element('td');
			var td2 = new Element('td', {html: verUser});
			var td3 = new Element('td', {html: verDate});
			
			if (!docType.avoidDownload){
				var downloadIcon = new Element('a', {html: verNumber, 'href':CONTEXT + URL_REQUEST_AJAX + "?action=downloadDocument&docId=" +  encodeURIComponent(downloadDocId) + "&version="+ verNumber +"&prefix=" + prefix + TAB_ID_REQUEST});
				downloadIcon.inject(td1);
			} else {
				td1.innerHTML = verNumber;
			}
			
			td1.inject(tr);
			td2.inject(tr);
			td3.inject(tr);
			tr.inject(newBody);
		}
		
	}
	
	//var metadatas = ajaxCallXml.getElement("metadatas");
	var metadatas = ajaxCallXml.getElementsByTagName("metadatas");
	if(metadatas)
		metadatas = metadatas[0];
	processXmlMetadata(metadatas, true);

}

function initCurrentDocuments(retFunction, extra) {
	var mdlDocumentContainer = $('mdlDocumentContainer');
	mdlDocumentContainer.onModalConfirm = retFunction;
	mdlDocumentContainer.extraProperties = extra;
	
	var url = (extra && extra.url_aux) ? extra.url_aux : URL_REQUEST_AJAX;
	
	new Request({
		method: 'post',
		url: CONTEXT + url + "?action=ajaxLoadCurrent&isAjax=true" + TAB_ID_REQUEST + "&prefix=" + extra.prefix + "&allowMultiple=" + extra.allowMultiple + "&allowSign=" + extra.allowSign + "&allowLock=" + extra.allowLock + "&readOnly=" + extra.readOnly,
		onComplete: function(resText, resXml) { modalProcessXml(resXml);  }
	}).send();
}

function closeDocumentsModal(){
	var mdlDocumentContainer = $('mdlDocumentContainer');
	mdlDocumentContainer.addClass('hiddenModal');
	if(window.frameElement && $(window.frameElement).hasClass('modal-content')) {
		$(window.frameElement).fireEvent('unblock');
	}
	mdlDocumentContainer.blockerModal.hide();
	
	if(DOCUMENTMODAL_HIDE_OVERFLOW) {
		$(document.body).setStyle('overflow', '');
	}
	
	if(mdlDocumentContainer.onModalClose) mdlDocumentContainer.onModalClose();
	
}

function closeDocumentModalInfo(){
	var mdlDocumentInfo = $('mdlDocumentInfo');
	mdlDocumentInfo.addClass('hiddenModal');
	mdlDocumentInfo.blockerModal.hide();
}

function fncDocumentLoadAll() {
	var mdlDocumentContainer = $('mdlDocumentContainer');
	if (mdlDocumentContainer.onModalConfirm) {
		var ajaxCallXml = getLastFunctionAjaxCall();
		var xmlGenerals = ajaxCallXml.getElementsByTagName('general');
		
		if (xmlGenerals != null) {
			
			for (var i = 0; i < xmlGenerals.length; i++) {
				var xmlGeneral = xmlGenerals[i];
				var docId = xmlGeneral.getAttribute("docId");
				var downloadDocId = xmlGeneral.getAttribute("downloadDocId");
				var docName = xmlGeneral.getAttribute("docName");
				var docSize = xmlGeneral.getAttribute("docSize");
				var docLock = xmlGeneral.getAttribute("locked");
				var docUserLocking = xmlGeneral.getAttribute("userLocking");
				var onlyInformation = xmlGeneral.getAttribute("onlyInformation");
				var docTypeId = xmlGeneral.getAttribute("docTypeId");
				var docTypeLabel = xmlGeneral.getAttribute("docTypeLabel");
				var docTypeFreeMetadata = toBoolean(xmlGeneral.getAttribute("docTypeFreeMetadata"));				
				
				var docLang = xmlGeneral.getAttribute("docLang");
				var docLangGroup = xmlGeneral.getAttribute("docLangGroup");
				
				var markedToSign = xmlGeneral.getAttribute("markedToSign") == "true";
				
				onlyInformation = onlyInformation == "true" || onlyInformation == true || window.forceDocOnlyInformation == true;

				if (docLock == "true" || docLock == true) {
					docLock = true;
				} else if (docLock == "false" || docLock == false) {
					docLock = false;
				} else {
					docLock = false;
				}
				
				var prefix = xmlGeneral.getAttribute("prefix");
				if(prefix!=null){
					mdlDocumentContainer.extraProperties.prefix = prefix;
					//cambiar tambien si tienen, el prefijo de: buttonAdd y addTo
					//Verificar que funciones bien el String.endsWidth
					//if(endsWith(mdlDocumentContainer.extraProperties.buttonAdd,"P") || endsWith(mdlDocumentContainer.extraProperties.buttonAdd,"E")){
					if(mdlDocumentContainer.extraProperties.buttonAdd.endsWith("P") || mdlDocumentContainer.extraProperties.buttonAdd.endsWith("E")){
						mdlDocumentContainer.extraProperties.buttonAdd = mdlDocumentContainer.extraProperties.buttonAdd.substr(0,mdlDocumentContainer.extraProperties.buttonAdd.length-1) + prefix;
						mdlDocumentContainer.extraProperties.addTo = mdlDocumentContainer.extraProperties.addTo.substr(0,mdlDocumentContainer.extraProperties.addTo.length-1) + prefix;
					}
				}
				
				mdlDocumentContainer.onModalConfirm(
					mdlDocumentContainer.extraProperties,
					{
						docId: docId,
						downloadDocId:downloadDocId,
						docName: docName,
						docSize: docSize,
						docLock: docLock,
						docUserLocking: docUserLocking,
						onlyInformation: onlyInformation,
						docTypeId: docTypeId,
						docTypeLabel: docTypeLabel,
						docTypeFreeMetadata: docTypeFreeMetadata,
						markedToSign: markedToSign,
						docLang: docLang,
						docLangGroup: docLangGroup
					}
				);
			}
			
			if (xmlGenerals.length > 0){
				var tabDocs = $('tabDocs');
				if (tabDocs){
					tabDocs.addClass("docsMarked");
				}
			}
		}
	}
}

function fncDocumentLoadInformation() { 
	var ajaxCallXml = getLastFunctionAjaxCall();

	//var xmlGeneral = ajaxCallXml.getChildren('general')[0];
	var xmlGeneral = ajaxCallXml.childNodes[0]; //IE Friendly

	var createMode = xmlGeneral.getAttribute("createMode");
	var allowAllType = xmlGeneral.getAttribute("allowAllType");
	var isDocTypeDisabled = toBoolean(xmlGeneral.getAttribute("isDocTypeDisabled"));
	
	var selDocAllPoolPerm = $('selDocAllPoolPerm');
	
	for (var i = 0; i < selDocAllPoolPerm.options.length; i++) {
		if (createMode=="false" && selDocAllPoolPerm.options[i].value == allowAllType) {
			selDocAllPoolPerm.selectedIndex = i;
			break;
		}
	}
	
	/*
	//metadata
	var xmlMetadata = ajaxCallXml.getElement('metadatas');
	processXmlMetadata(xmlMetadata,true);
	
	//docType
	var xmlDocType = ajaxCallXml.getElement('docTypes');
	processXmlDocTypes(xmlDocType);
	*/
	//IE friendly
	var xmlMetadata;
	var xmlDocType;
	for (var i = 0; i < ajaxCallXml.childNodes.length; i++) {
		if(ajaxCallXml.childNodes[i].nodeName == 'metadatas')
			xmlMetadata = ajaxCallXml.childNodes[i];
		else if(ajaxCallXml.childNodes[i].nodeName == 'docTypes')
			xmlDocType = ajaxCallXml.childNodes[i];
	}
	processXmlMetadata(xmlMetadata,true);
	processXmlDocTypes(xmlDocType);
	
	
	if (isDocTypeDisabled){
		closeDocumentsModal();
		
		SYS_PANELS.newPanel();
		var panel = SYS_PANELS.getActive();
		panel.addClass("modalWarning");
		panel.content.innerHTML = MSG_NO_UP_DOC_TYPE_DIS;
		panel.footer.innerHTML = "";
		SYS_PANELS.addClose(panel);
		SYS_PANELS.refresh();		
	}
	
	$('mdlDocumentContainer').focus();
}

function fncDocumentProcessUpload() {
	var ajaxCallXml = getLastFunctionAjaxCall();	

	//var xmlGeneral = ajaxCallXml.getChildren('general')[0];
	var xmlGeneral = ajaxCallXml.childNodes[0]; //IE Friendly
	if(xmlGeneral){
		var docId = xmlGeneral.getAttribute("docId");
		var downloadDocId = xmlGeneral.getAttribute("downloadDocId");
		var docName = xmlGeneral.getAttribute("docName");
		var docSize = xmlGeneral.getAttribute("docSize");
		
		var docTypeId = xmlGeneral.getAttribute("docTypeId");
		var docTypeLabel = xmlGeneral.getAttribute("docTypeLabel");
		var docTypeFreeMetadata = toBoolean(xmlGeneral.getAttribute("docTypeFreeMetadata"));		
		
//		var allowSign = xmlGeneral.getAttribute("allowSign") == "true";
		
		var docLang = xmlGeneral.getAttribute("docLang");
		var docLangGroup = xmlGeneral.getAttribute("docLangGroup");
			
		var mdlDocumentContainer = $('mdlDocumentContainer');
		
		if (mdlDocumentContainer.onModalConfirm) {
			mdlDocumentContainer.onModalConfirm(
				mdlDocumentContainer.extraProperties,
				{
					docId: docId,
					downloadDocId: downloadDocId,
					docName: docName,
					docSize: docSize,
					docLock: false,
					docTypeId: docTypeId,
					docTypeLabel: docTypeLabel,
					docTypeFreeMetadata: docTypeFreeMetadata,
					docLang: docLang,
					docLangGroup: docLangGroup
//					allowSign: allowSign
				}
			);
		}
		closeDocumentsModal();
	}
}

function processXmlMetadata(resXml,fromShow){
	if (addNewDoc){
		destroyTableMetadata(docType.free);
	} else {
		destroyTableMetadata(false);
	}	
	
	if (resXml){
		
		if (!fromShow && checkErrorsDoc(resXml)) return;
		
		if (!fromShow){
			var metadata = resXml.getElementsByTagName("metadatas");
				
			if (metadata != null && metadata.length > 0 && metadata.item(0) != null) {
				metadata = metadata.item(0).getElementsByTagName("metadata");
			} else {
				metadata = null;
			}
		} else {
			var metadata = resXml.getElementsByTagName("metadata");
		}
		
		var hasRequired = false;
		
		if (metadata != null){
			var trs = table.getElements("tr");
			var after = trs.length > 0 ? trs[0] : null;
		
			for (var i = metadata.length-1; i >= 0; i--){
				var xmlMetadata = metadata[i];
				
				var id = xmlMetadata.getAttribute("id");
				var name = xmlMetadata.getAttribute("name");
				var type = xmlMetadata.getAttribute("type");
				var required = "Y" == xmlMetadata.getAttribute("required");
				var title = xmlMetadata.getAttribute("title");
				var value = xmlMetadata.getAttribute("value");
				var free = "Y" == xmlMetadata.getAttribute("free");
				after = addMetadata(id,name,type,required,title,value,free,after);
				
				hasRequired = hasRequired || required;
			}
		}
		
		var _metadata = $('metadata');
		if(_metadata.get('data-hideMetadata') == 'true') {
			if(hasRequired) 
				_metadata.setStyle('display', '');
			else
				_metadata.setStyle('display', 'none');
		}
	}
	
	$('buttonsMetadata').setStyle("display",docType.free && addNewDoc ? "" : "none");
	
	fixTableMetadata();
	
	var mdlDocumentContainer = $('mdlDocumentContainer');
	mdlDocumentContainer.position();
	
	SYS_PANELS.closeLoading();
	
	if(Browser.ie8) {
		setTimeout(function() {
			mdlDocumentContainer.focus();
		}, 1000);
	} else {
		mdlDocumentContainer.focus();
	}
	
}

function addMetadata(id,name,type,required,title,value,free,objAfter){
	var tableMetadata = table;
	
	var tr = new Element("tr",{'class': free ? 'selectableTR' : ''});
	if (objAfter){
		tr.inject(objAfter,"before");
	} else {
		tr.inject(table);
	}
	
	tr.setAttribute("rowId",id);
	tr.setAttribute("rowName",name);
	tr.setAttribute("rowFree",free);
	tr.setAttribute("rowRequired",required);
	tr.setAttribute("rowType",type);
	tr.setAttribute("rowTitle",title);
	
	required = required && addNewDoc;
	free = free && addNewDoc;
	
	if (free) tr.addEvent("click", function(evt) { this.toggleClass("selectedTR"); evt.stopPropagation(); });				
	
	var td1 = new Element("td", {styles:{'width':'49%'}}).inject(tr);
	var div1 = new Element('div', {styles: {width: '100%', overflow: 'hidden', 'white-space': 'pre', 'margin': '4px 0px'}}).inject(td1);
	if (!free){ //no free
		var span1 = new Element('span',{html: (required ? '* ' : '') + title }).inject(div1);
		if (div1.scrollWidth > div1.offsetWidth) {
			td1.title = title;
			td1.addClass("titiled");
		}
	} else { //free
		new Element("span",{html: '*&nbsp;',styles:{'float':'left'}}).inject(div1);
		var input1 = new Element('input',{'type':'text','value':title, 'class': "validate['required']", styles: {width: '95%'}}).inject(div1);
		input1.addEvent("change",function(e){ this.getParent("tr").setAttribute("rowTitle",this.value); });
		$('frmModalDocumentUpload').formChecker.register(input1);
	}
	
	var td2 = new Element("td", {'align':'center', styles:{'width':'49%'}}).inject(tr);
	var div2 = new Element('div', {styles: {width: '100%', overflow: 'hidden', 'white-space': 'pre', 'margin': '4px 0px'}}).inject(td2);
	
	if (addNewDoc){
		if (type == "D"){ //Date
			var input2 = new Element('input',{'type':'text','value':value,'class':'datePickerCustom filterInputDate','format':'d/m/Y', styles: {width: '83%'}}).inject(div2);
			setAdmDatePicker(input2);
		} else if (type == "N") { //Numeric
			var input2 = new Element('input',{'type':'text','value':value, 'class': '', styles: {width: '90%'}}).inject(div2);
			input2.addEvent("keypress",function(e){
				if (e.key < '0' || e.key > '9'){
					if (e.key != "delete" && e.key != "tab" && e.key != "backspace" && e.key != "left" && e.key != "right"){
						e.stop();
					}
				} 
			});
		} else { //String
			var input2 = new Element('input',{'type':'text','value':value, 'class': '', styles: {width: '90%'}}).inject(div2);
		}				
		if (required){
			new Element("span",{html: '*&nbsp;',styles:{'float':'left'}}).inject(input2,"before");
			input2.setStyle("padding-left","10px");
			input2.addClass("validate['required']");
			$('frmModalDocumentUpload').formChecker.register(input2);
		}
	} else {
		var span2 = new Element('span',{html: value }).inject(div2);
		if (div2.scrollWidth > div2.offsetWidth) {
			td2.title = value;
			td2.addClass("titiled");
		}
	}
	
	tr.getRowId = function () { return this.getAttribute("rowId"); }
	tr.getRowName = function () { return this.getAttribute("rowName"); }
	tr.getRowFree = function () { return toBoolean(this.getAttribute("rowFree")); }
	tr.getRowRequired = function () { return toBoolean(this.getAttribute("rowRequired")); }
	tr.getRowType = function () { return this.getAttribute("rowType"); }
	tr.getRowTitle = function () { return this.getAttribute("rowTitle"); }
	tr.getRowInputTitle = function () { return this.getRowFree() ? this.getElements("td")[0].getElement("div").getElement("input") : null; }
	tr.getRowValue = function () { return this.getElements("td")[1].getElement("div").getElement("input").value; }
	tr.getRowInput = function () { return this.getElements("td")[1].getElement("div").getElement("input"); }
	
	return tr;
}

function destroyTableMetadata(onlyNoFree){
	/*
	if (table){
		table.getElements("tr").each(function (tr){
			if (onlyNoFree && tr.getRowFree()) return;
			deleteRowMetadata(tr);		
		});
	}
	*/
}

function deleteRowMetadata(row){
	/*
	if (row){
		if (row.getRowRequired()){
			var input = row.getRowInput();
			if (input) $('frmModalDocumentUpload').formChecker.dispose(input);
		}
		if (row.getRowFree()){
			var input = row.getRowInputTitle();
			if (input) $('frmModalDocumentUpload').formChecker.dispose(input);
		}
		row.destroy();
	}
	*/
}

function fixTableMetadata(){
	var tableMetadata = table;
	var trs = tableMetadata.getElements("tr");
	
	for (var i = 0; i < trs.length; i++){
		var tr = trs[i];
		if (i % 2 == 0) tr.addClass("trOdd"); else tr.removeClass("trOdd");
		if (i == trs.length-1) tr.addClass("lastTr"); else tr.removeClass("lastTr");		
	}
	
	addScrollTable(tableMetadata);
}

function checkErrorsDoc(resXml){
	if (resXml == null) return false;
	//verifico si hubo errores
	var data = resXml.getElementsByTagName("data");
	if (data != null && data.length > 0 && data.item(0) != null) {
		//hubo error --> proceso errores
		modalProcessXml(resXml);
		return true;
	}
	return false;
}


function processXmlDocTypes(resXml){
	if (!addNewDoc) return;
	
	var cmbDocType = $('cmbDocType');
	cmbDocType.innerHTML = "";
		
	if (checkErrorsDoc(resXml)) return;
	
	var docTypes = resXml.getElementsByTagName("docType");
		
	for (var i = 0; i < docTypes.length; i++){
		var xmlDocType = docTypes[i];
		
		var option = new Element('option');
		option.set("text", xmlDocType.getAttribute("title"));
		option.set("value", xmlDocType.getAttribute("id"));
		option.set("data-free", toBoolean(xmlDocType.getAttribute("free")));
//		cmbDocType.options[i] = option;
		option.inject(cmbDocType);
		if (toBoolean(xmlDocType.getAttribute("selected"))){
			cmbDocType.selectedIndex = i;
			cmbDocType.value = xmlDocType.getAttribute("id");
			var spanDocType = $('spanDocType');
			if(spanDocType) spanDocType.set('html', xmlDocType.getAttribute("title"))
		}
	}
	
	if (docTypes.length<=1){
		$('cmbDocType').setStyle("display","none");
		$('spanDocType').setStyle("display","");	
	}
	
	if (newDoc){
		docType.id = cmbDocType.value;
		docType.free = toBoolean(cmbDocType.options[cmbDocType.selectedIndex].get("data-free"));
		cmbDocType.fireEvent("change");
	} else {
		setTimeout(function() {
			fixTableMetadata();
			$('mdlDocumentContainer').position();
		}, 100);
	}
	
	var mdlDocumentContainer = $('mdlDocumentContainer');
	mdlDocumentContainer.position();
	mdlDocumentContainer.blockerModal.show();
	if(window.frameElement && $(window.frameElement).hasClass('modal-content')) {
		$(window.frameElement).fireEvent('block');
	}
	mdlDocumentContainer.removeClass('hiddenModal');
}

function validFreeMetadataTitles(){
	/*	
	var trs = $('tableMetadata').getElements("tr");
	var ok = true;
	var arrayTitles = new Array();
	
	for (var i = 0; i < trs.length && ok; i++){
		var tr = trs[i];
		if (tr.getRowFree()){
			var title = tr.getRowInputTitle().value.toUpperCase();
			ok = !arrayContain(arrayTitles, title);
			arrayTitles[arrayTitles.length] = title;
		} else {
			var title = tr.getRowTitle().toUpperCase();
			ok = !arrayContain(arrayTitles, title);
			arrayTitles[arrayTitles.length] = title;
		}
	}
	
	if (!ok){
		showMessage(MSG_METADATA_TITLE_UNIQUE, GNR_TIT_WARNING, 'modalWarning');		
	}
	
	return ok;
	*/
	
	return true;
}

function arrayContain(array,element){
	var contain = false;
	if (array != null && array.length > 0){
		var i = 0;
		while (i < array.length && !contain){
			contain = (array[i] == element);
			i++;
		}
	}
	return contain;	
}

function fncDocumentShowMsgNoDocTypes(){
	//closeDocumentsModal();
	showMessage(MSG_NO_EXI_DOC_TYPE_ENA_AND_PER, GNR_TIT_WARNING, 'modalWarning');	
}